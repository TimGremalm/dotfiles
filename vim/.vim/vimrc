" Vim Settings ================================================================
set nocompatible				" Turn off vi compatibility mode
set nobackup					" Turn off backupfiles
set nowritebackup				" Turn off backupfiles
set noswapfile					" Don't use swap file
set laststatus=2				" Always show statusbar
":set - for setting options. Append word 'no' for a reverse effect.
":let - for asigning variables a value.

" Scrolling ===================================================================
set nu							" Show line-numbering
set scrolloff=5					" Keep at least 5 lines above/below carret
nmap <F4> :set rnu! rnu?<CR>|	" Set relative line-numbering
nmap <F10> <c-y>|				" Scroll up
nmap <F9> <c-e>|				" Scroll down
"nmap <ScrollWheelUp> <c-y>|	" Enable scroll up 1 line with mouse
"nmap <ScrollWheelDown> <c-e>|	" Enable scroll down 1 line with mouse
"gg - Navigate to BOF
"1g - Navigate to BOF
"G - Navigate to EOF

" Formatting and Indentation ==================================================
filetype on						" Detect filetype, used by setf.
filetype indent off				" Use indenting based on filetype.
set encoding=utf-8 nobomb		" Use UTF-8 without BOM.
set autoindent					" Follow indentation.
set noexpandtab					" Use tab character for indentation.
set tabstop=4					" Set length of a tab.
set shiftwidth=4				" Set indentation tab width.
set softtabstop=4				" When using spaces as indent backspace will
								" remove 4 spaces.
vnoremap < <gv|					" Reselect visual block after indent
vnoremap > >gv|					" Reselect visual block after indent
":retab - Convert all tabs to set indentation-parameters.
":set expandtab - Use space character for indentation.
":set enc=utf-8 - Set encoding for UTF-8.
":set enc=iso-8859-1 - Set encoding for ISO-8859-1.
":set ff=dos - Set new line mode to \r\n.
":set ff=unix - Set new line mode to \n.
":set paste - Paste-mode, insert text whithout autoindentation.

" Searching ===================================================================
set ignorecase					" Ignore case while searching
set smartcase					" Case sensitive search if any caps
set hlsearch					" Highlight search-results
set wrapscan					" Search from beginning if hits EOF
"% - Jump to a matching opening or closing parenthesis
"* - Search, forward, for word under carret forward
"# - Search, backward, for word under carret forward
"fw - Find next character "w"
"cfo - subsitute from carret until next occurance of cahracter "o"
":%s/foo/bar/g - Substitute foo for bar globally
"vjj:s/search/substitute/g - Select 2 lines down and substitute text within.

" Select ======================================================================
set showcmd						" Show select count of rows/cloumns in visual
set mouse=a						" Enable mouse select
"c-v<Down>Ihej - Visual block select 1 row down, insert text "hej" before
"V<Down>y - Select by Row, 1 row down and copy it

" Highlighting ================================================================
" match Error /\s\+$/						" Highlight trailing spaces
										" Turn off :match Error none
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
										" Show whitespace with above characters
nmap <F2> :set list! list?<CR>|			" Toggle highlight of whitespace
nmap <F3> :set hlsearch! hlsearch?<CR>|	" Toggle search highlight
nmap <c-f> :let @/=""<CR>|				" Clear search result and highlighting

" Syntax highlighting =========================================================
set showmatch					" Visually show matching brackets under carret
syntax enable					" Set syntax highlighting
":setf c - Manually set syntax to C
":setf php - Manually set syntax to PHP
":setf xml - Manually set syntax to XML

" Macro =======================================================================
nmap <c-m> qq|							" Start record macro to 'q'
nmap <c-q> @q|							" Playback macro 'q' once
"qa - Start recording macro to register a
"C-a - Increment number
"q - Stop recording
"9@a - Playback macro from register a 9 times

" Tab, Buffer and Window Navigation ===========================================
nmap <c-t> :tabe|						" Create new tab, but leave promt open
										" Write filename, leave blank for new
nmap <F7> :tabp<CR>|					" Navigate to previous tab <gT>
nmap <F8> :tabn<CR>|					" Navigate to next tab <gt>
function! MoveTabPageLeft()
	let l:x = tabpagenr()
	if l:x == 0
	else
		let l:x = l:x - 2
		exe 'tabmove ' . l:x
	endif
endfunction
function! MoveTabPageRight()
	let l:x = tabpagenr()
	if l:x == 0
	else
		exe 'tabmove ' . l:x
	endif
endfunction
nmap <F5> :exe MoveTabPageLeft()<CR>
nmap <F6> :exe MoveTabPageRight()<CR>
"C-o - navigate backwards in history works across different buffers and tabs)
"C-i - navigate forwards in history works across different buffers and tabs)
"gf - Go to File (under carret)
"c-wq - Close current window
":qa - Close all windows
"c-ww - Switch focus to next window
"c-wr - Switch focus to previous window
"c-w<Up> - Switch focus to window up
"c-w<Down> - Switch focus to window down
"c-w<Left> - Switch focus to window left
"c-w<Right> - Switch focus to window right
"c-wR - Rotate windows layout
"c-wJ - Move current window to bottom
"c-wK - Move current window to top
"c-w- - Resize current window shrink width
"c-w+ - Resize current window grow width
"c-w< - Resize current window shrink width
"c-w> - Resize current window grow width

" Autocomplete filenames with wildmenu ========================================
set wildmenu							" Enables wildmode for filenames
set wildmode=longest:full,full			" Show full autocomple
"<Tab> - Autocompletes to the longest common string and invokes the wildmenu
"<S-Tab> - Autocomplete backwards

" Color Theme =================================================================
colorscheme elflord							" Set color-scheme

" File handling ===============================================================
"vim -pN file1 file2 file3 - Open tab pages for each file
"vim -d file1 file2 - Compare files in diff mode
":r filename.txt - Import file after carret
":w NewFilename.txt - Write content in current window to file
":18, w! filerow.txt - Write row 18 to  EOF to file
":18,22 w! filerow.txt - Write row 18 to 22 to file
"ZZ - Save file and quit

" General tips of how to use vim ==============================================
" Work with vim commands just like grammer in verbal languages
"y2w - Yank two Words
"y3} - Yank three Paragrafes
"y3{ - Yank three Paragrafes up
"dap - Delete A Paragraf
"daw - Delete A Word
"v2e - Visually select 2 End of words
"dG  - Delete everything from carret to EOF

" Use relative line numbers
" Work with relative line numbers, it makes deleting an copying easier.
" You can set relative lin number mode by typing:set rnu

try
	source ~/.vim/cozy.vim
catch
	" No cozy config file installed, ignore.
endtry

